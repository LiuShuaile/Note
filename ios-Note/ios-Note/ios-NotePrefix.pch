//
//  PrefixHeader.pch
//  Note
//
//  Created by SL on 05/04/2017.
//  Copyright © 2017 Sam. All rights reserved.
//

#ifndef PrefixHeader_pch
#define PrefixHeader_pch

// Include any system framework and library headers here that should be included in all compilation units.
// You will also need to set the Prefix Header build setting of one or more of your targets to reference this file.


#import "UIAlertController+Blocks.h"
#import "TVDataSourceAndDelegate.h"
#import "Tools.h"
#import "Masonry.h"
#import "MMPlaceHolder.h"
#import "SSKeychain.h"


#ifndef    weakify_self
#if __has_feature(objc_arc)
#define weakify_self autoreleasepool{} __weak __typeof__(self) weakSelf = self;
#else
#define weakify_self autoreleasepool{} __block __typeof__(self) blockSelf = self;
#endif
#endif
#ifndef    strongify_self
#if __has_feature(objc_arc)
#define strongify_self try{} @finally{} __typeof__(weakSelf) self = weakSelf;
#else
#define strongify_self try{} @finally{} __typeof__(blockSelf) self = blockSelf;
#endif
#endif


//生成单例
#define DISPATCH_SINGLETON_FOR_CLASS(classname) \
\
static id shareInstance = nil; \
\
\
+ (instancetype)shareInstance \
{ \
static dispatch_once_t onceToken; \
dispatch_once(&onceToken, ^{ \
shareInstance = [[[self class] alloc] init]; \
}); \
return shareInstance; \
} \
\
\
- (id)init \
{ \
static dispatch_once_t onceToken; \
dispatch_once(&onceToken, ^{ \
shareInstance = [super init]; \
}); \
return shareInstance; \
} \
\
\
+ (id)allocWithZone:(struct _NSZone *)zone \
{ \
if (shareInstance == nil) { \
static dispatch_once_t onceToken; \
dispatch_once(&onceToken, ^{ \
shareInstance = [super allocWithZone:zone]; \
}); \
} \
return shareInstance; \
} \
\
\
- (id)copyWithZone:(NSZone *)zone \
{ \
return shareInstance; \
}


#endif /* PrefixHeader_pch */

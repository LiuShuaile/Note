//
//  GCDTableViewController.h
//  Note
//
//  Created by SL on 28/03/2017.
//  Copyright © 2017 Sam. All rights reserved.
//

#import <UIKit/UIKit.h>

@interface GCDTableViewController : UITableViewController

@end

/*
 1、GCD的优点
 GCD可用于多核的并行运算
 GCD会自动利用更多的CPU内核（比如双核、四核）
 GCD会自动管理线程的生命周期（创建线程、调度任务、销毁线程）
 程序员只需要告诉GCD想要执行什么任务，不需要编写任何线程管理代码
 
 2、
 任务：就是执行操作的意思，换句话说就是你在线程中执行的那段代码。在GCD中是放在block中的。执行任务有两种方式：同步执行和异步执行。两者的主要区别是：是否具备开启新线程的能力。
 
 同步执行（sync）：只能在当前线程中执行任务，不具备开启新线程的能力
 异步执行（async）：可以在新的线程中执行任务，具备开启新线程的能力
 
 队列：这里的队列指任务队列，即用来存放任务的队列。队列是一种特殊的线性表，采用FIFO（先进先出）的原则，即新任务总是被插入到队列的末尾，而读取任务的时候总是从队列的头部开始读取。每读取一个任务，则从队列中释放一个任务。在GCD中有两种队列：串行队列和并发队列。
 
 并发队列（Concurrent Dispatch Queue）：可以让多个任务并发（同时）执行（自动开启多个线程同时执行任务）
 并发功能只有在异步（dispatch_async）函数下才有效
 串行队列（Serial Dispatch Queue）：让任务一个接着一个地执行（一个任务执行完毕后，再执行下一个任务）
 
 3、GCD的使用步骤
 创建一个队列（串行队列或并发队列）
 将任务添加到队列中，然后系统就会根据任务类型执行任务（同步执行或异步执行）
 
 4、
 可以使用dispatch_queue_create来创建对象，需要传入两个参数，第一个参数表示队列的唯一标识符，用于DEBUG，可为空；第二个参数用来识别是串行队列还是并发队列。DISPATCH_QUEUE_SERIAL表示串行队列，DISPATCH_QUEUE_CONCURRENT表示并发队列。
 对于并发队列，还可以使用dispatch_get_global_queue来创建全局并发队列。GCD默认提供了全局的并发队列，需要传入两个参数。第一个参数表示队列优先级，一般用DISPATCH_QUEUE_PRIORITY_DEFAULT。第二个参数暂时没用，用0即可。
 
 5、
 并发队列 + 同步执行
 并发队列 + 异步执行
 串行队列 + 同步执行
 串行队列 + 异步执行
 
 主队列 + 同步执行
 主队列 + 异步执行
 
 
                并发队列                     串行队列                          主队列
 同步(sync)      没有开启新线程，串行执行任务     没有开启新线程，串行执行任务          开启新线程，串行执行任务
 异步(async)     有开启新线程，并发执行任务       有开启新线程(1条)，串行执行任务       没有开启新线程，串行执行任务
 */
